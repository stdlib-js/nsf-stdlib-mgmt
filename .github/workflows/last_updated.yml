#/
# @license Apache-2.0
#
# Copyright (c) 2025 The Stdlib Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#/

# Workflow name:
name: last_updated

# Workflow triggers:
on:
  # Define all the activity types for which we want to update the "Last updated" project field:
  issues:
    types:
      - opened
      - edited
      - closed
      - reopened
      - assigned
      - unassigned
      - milestoned
      - demilestoned
  issue_comment:
    types:
      - created
      - edited
      - deleted

# Workflow environment variables:
env:
  PROJECT: nsf

# Workflow jobs:
jobs:

  # Define a job for updating an issue's "Last Updated" field...
  update-field:

    # Define a display name:
    name: 'Update field'

    # Define the type of virtual host machine:
    runs-on: ubuntu-latest

    # Define the sequence of job steps...
    steps:

      # Checkout the repository:
      - name: 'Checkout repository'
        uses: actions/checkout@v3
        with:
          # Specify whether to remove untracked files before checking out the repository:
          clean: true

          # Limit clone depth to the most recent commit:
          fetch-depth: 1

          # Specify whether to download Git-LFS files:
          lfs: false
        timeout-minutes: 10

      # Update the "Last Updated" field:
      - name: 'Update field'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GHPROJECT_TOKEN }}
          script: |
            const script = require( '${{ github.workspace }}/.github/workflows/scripts/set_last_updated.js' );
            await script( github, context, core, '${{ env.PROJECT }}' );

        timeout-minutes: 10
